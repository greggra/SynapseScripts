{
	"name": "fGeneralLedger",
	"properties": {
		"folder": {
			"name": "VirtualDW"
		},
		"content": {
			"query": "use FnO\ngo\n\ncreate view raw.vw_fGeneralLedger as \n  select gje.AccountingDate as AccountingDate,\n         gje.DocumentDate as DocumentDate,\n         gje.DocumentNumber as DocumentNumber,\n         gje.JournalNumber as JournalNumber,\n         davc.DisplayValue as LedgerDimension,\n         gjae.MainAccount as MainAccount_FK,\n         davc.CostCenter as CostCenter_FK,\n         davc.Department as Department_FK,\n         davc.BusinessUnit as BusinessUnit_FK,\n         davc.ItemGroup as ItemGroup_FK,\n         l.Recid as LegalEntity_FK,\n         gjae.AccountingCurrencyAmount as [Amount(AccountingCurrency)],\n         l.AccountingCurrency as AccountingCurrency,\n         gjae.ReportingCurrencyAmount as [Amount(ReportingCurrency)],\n         l.ReportingCurrency as ReportingCurrency,\n         gjae.TransactionCurrencyAmount as [Amount(TransactionCurrency)],\n         gjae.TransactionCurrencyCode as TransactionCurrency,\n         gje.SubLedgerVoucher as SubLedgerVoucher\n    from raw.GeneralJournalAccountEntry gjae\n         join raw.GeneralJournalEntry gje on gjae.GeneralJournalEntry = gje.RecId\n         join raw.Ledger l on gje.Ledger = l.RecId\n         join raw.DimensionAttributeValueCombination davc on gjae.LedgerDimension = davc.RecId\ngo\n\n/*\n-- Need to delete the storage in data lake\ndrop external table dw.fGeneralLedger\ngo\n*/\n\ncreate external table dw.fGeneralLedger with (\n    location = 'DataWarehouse/fGeneralLedger'\n   ,data_source = ParquetDataSource\n   ,file_format = ParquetFileFormat\n) as \n    select * from raw.vw_fGeneralLedger\ngo\n\n/* Testing\nselect count(*) from raw.vw_fGeneralLedger\nselect count(*) from dw.fGeneralLedger\n\nselect year(AccountingDate) as Year\n      ,count(*) as AccountingEntries\n  from raw.vw_fGeneralLedger -- Using the views\n group by year(AccountingDate)\n order by 1\n\nselect year(AccountingDate) as Year\n      ,count(*) as AccountingEntries\n  from dw.fGeneralLedger\n group by year(AccountingDate)\n order by 1 \n\nselect ma.MainAccount, ma.Name, sum(f.[Amount(AccountingCurrency)]) as Total\n  from dw.fGeneralLedger f \n       inner join dw.dMainAccount ma on ma.[Key] = f.MainAccount_FK\n       inner join dw.dDate d on d.Date = f.AccountingDate\n where ma.ChartOfAccountName = 'Shared'\n   and d.Date = '2016'\n group by ma.MainAccount, ma.Name\n order by 1\n\n-- A query to build the dataflow\n\ncreate schema dmFin\ncreate view dmFin.GeneralLedger_Trans as\nselect ma.MainAccount as [Account], ma.Name as [Account Name] --, ma.*\n      ,cc.CC as [Cost Center], cc.CostCenter as [Cost Center Name] --, cc.*\n      ,d.Dept as [Department], d.Department as [Department Name] --, d.*\n      ,bu.BU as [Business Unit], bu.BusinessUnit as [Business Unit Name] --, bu.*\n      ,ig.ItemGroupId as [Item Group], ig.ItemGroup as [Item Group Name] -- , ig.*\n      ,gl.AccountingDate as [Accounting Date], gl.DocumentDate as [Document Date], gl.JournalNumber as [Journal No], gl.LedgerDimension as [Dimension],  gl.[Amount(ReportingCurrency)] as Amount, gl.SubLedgerVoucher as [Sub-Ledger Voucher] -- , gl.*\n  from dw.fGeneralLedger gl\n       inner join dw.dMainAccount ma on ma.[Key] = MainAccount_FK\n       inner join dw.dCostCenter cc on cc.[Key] = CostCenter_FK\n       inner join dw.dDepartment d on d.[Key] = Department_FK\n       inner join dw.dBusinessUnit bu on bu.[Key] = BusinessUnit_FK\n       inner join dw.dItemGroup ig on ig.[Key] = ItemGroup_FK \n\n */\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "fno",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}