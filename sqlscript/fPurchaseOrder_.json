{
	"name": "fPurchaseOrder_",
	"properties": {
		"folder": {
			"name": "LCoA"
		},
		"content": {
			"query": "use dynamics365_financeandoperations_d365techdelivery_dev_sandbox\ngo\n\nif (Object_Id('stoneridge.fPurchaseOrder') is not null) \n   drop view stoneridge.fPurchaseOrder\ngo\n\ncreate view stoneridge.fPurchaseOrder as\nwith \nconvertToUSD as (\n  select ExchangeRate/100. as ExchangeRate\n        ,ValidFrom\n        ,ValidTo\n    from ExchangeRate er\n           inner join ExchangeRateCurrencyPair ercp on ercp.RecId = er.ExchangeRateCurrencyPair\n   where FromCurrencyCode = 'EUR'\n     and ToCurrencyCode = 'USD'\n),\npoReceiveStatus as (\n  select ReferenceId as PurchId\n        ,it.ItemId\n        ,ito.InventTransId\n        ,coalesce(sum(case StatusReceipt when 1 then it.Qty end), 0) as [Purchased]\n        ,coalesce(sum(case StatusReceipt when 1 then it.CostAmountPhysical end), 0) as [Purchased Amount]\n        ,max(case StatusReceipt when 1 then it.DatePhysical end) as [Purchased Date]\n        ,coalesce(sum(case StatusReceipt when 2 then it.Qty end), 0) as [Received]\n        ,coalesce(sum(case StatusReceipt when 3 then it.Qty end), 0) as [Registered]\n        ,coalesce(sum(case StatusReceipt when 4 then it.Qty end), 0) as [Arrived]\n        ,coalesce(sum(case StatusReceipt when 5 then it.Qty end), 0) as [Ordered]\n    from InventTrans it\n           inner join InventTransOrigin ito on ito.RecId = it.InventTransOrigin and ito.DataAreaId = it.DataAreaId\n   where StatusIssue = 0 -- StatusIssue::None\n     and StatusReceipt >= 1 and StatusReceipt <= 5 -- , StatusReceipt::Purchased, StatusReceipt::Received, StatusReceipt::Registered, StatusReceipt::Arrived, StatusReceipt::Ordered\n     and ito.ReferenceCategory = 3 -- InventTransType::Purch\n   group by ReferenceId, it.ItemId, ito.InventTransId\n)\nselect pl.PurchId as [Purchase Id]\n      ,pl.ItemId as [Item Id]\n      ,pl.DeliveryDate as [Expected Delivery Date]\n      ,DocumentState as [Approval Status]\n      ,case when pt.PurchStatus in (0, 1, 2) and pl.PurchStatus in (0, 1, 2) then 'Yes' else 'No' end as [Is Open]\n      ,case pl.CurrencyCode when 'USD' then  pl.PurchPrice \n                            when 'EUR' then pl.PurchPrice * ctUSD.ExchangeRate                            \n                            else -999.99 \n       end as [Unit Price]  -- Always convert to USD\n      ,case pl.CurrencyCode when 'USD' then pl.LineAmount\n                            when 'EUR' then pl.LineAmount * ctUSD.ExchangeRate\n                            else -999.99 \n       end as [Line Amount] -- Always convert to USD\n      ,pl.InventDimId  \n      ,pl.PurchQty as [Purchase Order Quantity]\n      ,coalesce(prs.Registered, 0) as [Registered Quantity]\n      ,coalesce(prs.Ordered, 0) as [Remaining Quantity]\n      ,coalesce(prs.Purchased, 0) as [Received Quantity]\n      ,coalesce(prs.[Purchased Amount], 0) as [Received Amount]\n      ,prs.[Purchased Date] as [Last Received Date]\n  from PurchTable pt\n         inner join PurchLine pl on pl.PurchId = pt.PurchId and pl.DataAreaId = pt.DataAreaId\n         left outer join convertToUSD ctUSD on pt.ExchangeRateDate between ctUSD.ValidFrom and ctUSD.ValidTo\n         left outer join poReceiveStatus prs on prs.PurchId = pl.PurchId and prs.ItemId = pl.ItemId and prs.InventTransId = pl.InventTransId\n where pt.PurchStatus <> 4 -- Not canceled (All purchase meaningful purchase orders)\n   and pl.PurchStatus <> 4\n   and pl.IsDeleted = 0 -- NoYes::No\n/* Test\nselect top 100 * from stoneridge.fPurchaseOrder\nselect top 100 * from stoneridge.fPurchaseOrder where [Received Quantity] <> 0\n\nselect 'PurchLine', count(*) as RecCount from PurchLine where PurchStatus <> 4 and DataAreaId = 'DUS' and IsDeleted = 0 Union\nselect 'stoneridge.fPurchaseOrder', count(*) from stoneridge.fPurchaseOrder\n*/\ngo\n\n-- --------------------------------------------------\n-- Open purchase orders are a specialization of above\n-- --------------------------------------------------\n\nif (Object_Id('stoneridge.fOpenPurchaseOrder') is not null) \n   drop view stoneridge.fOpenPurchaseOrder\ngo\n\ncreate view stoneridge.fOpenPurchaseOrder as\nselect [Purchase Id]\n      ,[Item Id]\n      ,[Expected Delivery Date]\n      ,[Unit Price]\n      ,[Line Amount]\n      ,[Purchase Order Quantity]\n      ,[Registered Quantity]\n      ,[Remaining Quantity]\n      ,[Received Quantity]\n      ,[Received Amount]\n      ,[Last Received Date]\n  from stoneridge.fPurchaseOrder\n where [Is Open] = 'Yes'\n/* Test\nselect top 100 * from stoneridge.fOpenPurchaseOrder\nselect top 100 * from stoneridge.fOpenPurchaseOrder where [Registered Quantity] <> 0\nselect top 100 * from stoneridge.fOpenPurchaseOrder where [Purchase Id] = 'DUS1-PO-006740' and [Item Id] = '40106260010201'\nselect top 100 * from stoneridge.fOpenPurchaseOrder where [Purchase Id] = 'DUS1-PO-006662' and [Item Id] = '21177026444041'\n*/\ngo \n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "master",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}