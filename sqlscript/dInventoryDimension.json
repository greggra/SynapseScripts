{
	"name": "dInventoryDimension",
	"properties": {
		"folder": {
			"name": "VirtualDW/InProgress"
		},
		"content": {
			"query": "use FnO\ngo\n\n-- Need to delete the storage in data lake\ndrop external table dw.dInventoryDimension\ngo\n\ncreate external table dw.dInventoryDimension with (\n    location = 'DataWarehouse/dInventoryDimension'\n   ,data_source = ParquetStorage\n   ,file_format = ParquetFormat\n) as \nwith inventoryDimensions as (\n    select InventDimId\n        ,upper(id.DataAreaId) as DataAreaId\n        ,coalesce(s.SiteId, '') as InventSiteId\n        ,coalesce(s.Name, 'Unknown') as SiteName\n        ,coalesce(l.InventLocationId, '') as InventLocationId\n        ,coalesce(l.Name, 'Unknown') as LocationName\n        ,coalesce(l.InventLocationType, -1) as InventLocationType_Enum\n        ,coalesce(case InventLocationType when 0 then 'Standard' when 1 then 'Quarantine' when 2 then 'Transit' else 'Other' end, 'Unknown') as InventLocationType\n        ,coalesce(w.wMSLocationId, '') as wMSLocationId\n    from raw.InventDim id\n        left outer join raw.InventSite s on s.SiteId = id.InventSiteId and s.DataAreaId = id.DataAreaId\n        left outer join raw.WMSLocation w on w.wMSLocationId = id.wMSLocationId and w.DataAreaId = id.DataAreaId\n        left outer join raw.InventLocation l on l.InventLocationId = id.InventLocationId and l.DataAreaId = id.DataAreaId\n)\nselect cast(row_number() over(order by DataAreaId, InventDimId) as int) AS [Key]\n      ,InventDimId\n      ,DataAreaId\n      ,InventSiteId\n      ,SiteName\n      ,InventLocationId\n      ,LocationName\n      ,InventLocationType\n      ,wMSLocationId\n  from inventoryDimensions\n order by 1\ngo\n\nselect * \n  from dw.dInventoryDimension \n where wMSLocationId <> '' InventLocationType = 'Quarantine'\ngo",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "fno",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}